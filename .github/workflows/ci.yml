name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  smoke-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
    
    - name: Set up Python
      run: uv python install 3.11
    
    - name: Run MCP Smoke Test
      run: |
        MCP_SMOKE_TEST=1 uv run mcp run src/tecton_mcp/mcp_server/server.py
      
    - name: Verify smoke test output
      run: |
        # Run smoke test and capture output to verify it exits cleanly
        output=$(MCP_SMOKE_TEST=1 uv run mcp run src/tecton_mcp/mcp_server/server.py 2>&1)
        echo "Smoke test output: $output"
        
        # Check that the expected message appears in output
        if echo "$output" | grep -q "MCP_SMOKE_TEST is set. Exiting after initialization."; then
          echo "✅ Smoke test passed - MCP server initialized successfully"
          exit 0
        else
          echo "❌ Smoke test failed - Expected initialization message not found"
          exit 1
        fi

  integration-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
    
    - name: Set up Python
      run: uv python install 3.11
    
    - name: Install claude-code CLI
      run: npm install -g @anthropic-ai/claude-code
    
    - name: Install dependencies
      run: uv sync --dev
    
    - name: Run integration tests
      run: |
        echo "Running integration tests..."
        uv run python run_integration_tests.py
        echo "✅ Integration tests completed successfully"
      
    - name: Check integration test results
      if: failure()
      run: |
        echo "❌ Integration tests failed"
        exit 1

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
    
    - name: Set up Python
      run: uv python install 3.11
    
    - name: Install dependencies
      run: uv sync --dev
    
    - name: Run pylint
      run: uv run pylint src/tecton_mcp --disable=missing-module-docstring,missing-function-docstring,missing-class-docstring,too-few-public-methods --exit-zero